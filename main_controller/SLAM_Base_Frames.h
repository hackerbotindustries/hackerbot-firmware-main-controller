/*********************************************************************************
Hackerbot Industries, LLC
Created: February 2024

All of the commands for the SLAM base robot
*********************************************************************************/

#ifndef SLAMBASEFRAMES_H
#define SLAMBASEFRAMES_H


byte handshake_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x02, // CTRL_ID
  0x00, 0x51, // LEN_HI, LEN_LOW
  0x01, // PACKET_ID
  0x4f, // PACKET_LEN
  0x00, // step
  0x50, 0x43, 0x5F, 0x54, 0x45, 0x53, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, // model "PC_TEST"
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // core_version
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // chassis_version
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // mac_addr
  0x00, 0x00, 0x00, 0x00, // ip
  0xA5, // use_uart 0xa5
  0x00, // rssi
  0x00, // noise_level
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte mode_control_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x02, // CTRL_ID
  0x00, 0x04, // LEN_HI, LEN_LOW
  0x12, // PACKET_ID
  0x02, // PACKET_LEN
  0x00, // mode
  0x00, // param
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte behavior_control_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x02, // CTRL_ID
  0x00, 0x44, // LEN_HI, LEN_LOW
  0x22, // PACKET_ID
  0x42, // PACKET_LEN
  0x00, // bid (7)
  0x00, // status
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved[32];
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved[32];
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte sim_bump_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x02, // CTRL_ID
  0x00, 0x03, // LEN_HI, LEN_LOW
  0x24, // PACKET_ID
  0x01, // PACKET_LEN
  0x00, // binary: 0, 0, 0, 0, 0, 0, left, right
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte wheel_motor_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x02, // CTRL_ID
  0x00, 0x06, // LEN_HI, LEN_LOW
  0x09, // PACKET_ID
  0x04, // PACKET_LEN
  0x00, 0x00, // linear velocity
  0x00, 0x00, // angular velocity
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte get_map_list_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x02, // CTRL_ID
  0x00, 0x17, // LEN_HI, LEN_LOW
  0x20, // PACKET_ID
  0x15, // PACKET_LEN
  0x00, // map_num
  0x00, 0x00, 0x00, 0x00, // map_id_1
  0x00, 0x00, 0x00, 0x00, // map_id_2
  0x00, 0x00, 0x00, 0x00, // map_id_3
  0x00, 0x00, 0x00, 0x00, // map_id_4
  0x00, 0x00, 0x00, 0x00, // map_id_5
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte get_map_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x02, // CTRL_ID
  0x00, 0x06, // LEN_HI, LEN_LOW
  0x21, // PACKET_ID
  0x04, // PACKET_LEN
  0x00, 0x00, 0x00, 0x00, // map_id
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte ctrl_ota_start_resp_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x2F, // CTRL_ID_RESP
  0x00, 0x17, // LEN_HI, LEN_LOW
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // no_use0
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // no_use1
  0x00, 0x80, 0x00, 0x00, // file_limit = 32768
  0x00, 0x01, // packet_size = 256 (00 01), 64 = (40 00)
  0x00, // no_use2
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte ctrl_ota_file_info_resp_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x30, // CTRL_ID_RESP
  0x00, 0x09, // LEN_HI, LEN_LOW
  0x00, // stat
  0x00, 0x00, 0x00, 0x00, // last_offset
  0x00, 0x00, 0x00, 0x00, // last_crc32
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte ctrl_ota_file_pos_resp_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x31, // CTRL_ID_RESP
  0x00, 0x04, // LEN_HI, LEN_LOW
  0x00, 0x00, 0x00, 0x00, // last_offset
  0x00, 0x00 // CRC_HI, CRC_LOW
};


byte ctrl_ota_file_data_resp_frame[] = {
  0x55, 0xAA, // HEADER_HI, HEADER_LOW
  0x32, // CTRL_ID_RESP
  0x00, 0x04, // LEN_HI, LEN_LOW
  0x00, 0x00, 0x00, 0x00, // crc32
  0x00, 0x00 // CRC_HI, CRC_LOW
};


#endif